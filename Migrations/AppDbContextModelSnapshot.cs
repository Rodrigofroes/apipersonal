// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_personal.Database;

#nullable disable

namespace api_personal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_personal.Entities.AcademiaEntity", b =>
                {
                    b.Property<int>("Aca_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Aca_id"));

                    b.Property<string>("Aca_email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Aca_endereco")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Aca_latitude")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Aca_logo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Aca_longitude")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Aca_nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Aca_telefone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Aca_id");

                    b.ToTable("Academia");
                });

            modelBuilder.Entity("api_personal.Entities.AcademiaPersonalEntity", b =>
                {
                    b.Property<int>("Acp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Acp_id"));

                    b.Property<int>("Acp_aca_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Acp_data_inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Acp_per_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("Acp_valor")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Acp_id");

                    b.HasIndex("Acp_aca_id");

                    b.HasIndex("Acp_per_id");

                    b.ToTable("AcademiaPersonal");
                });

            modelBuilder.Entity("api_personal.Entities.PersonalEntity", b =>
                {
                    b.Property<int>("Per_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Per_id"));

                    b.Property<bool>("Per_ativo")
                        .HasColumnType("boolean");

                    b.Property<bool>("Per_confirmado")
                        .HasColumnType("boolean");

                    b.Property<string>("Per_cpf")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Per_cref")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Per_especialidade")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Per_foto")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Per_nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Per_telefone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Per_id");

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("api_personal.Entities.AcademiaPersonalEntity", b =>
                {
                    b.HasOne("api_personal.Entities.AcademiaEntity", "Academia")
                        .WithMany("AcademiaPersonals")
                        .HasForeignKey("Acp_aca_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_personal.Entities.PersonalEntity", "Personal")
                        .WithMany("AcademiaPersonals")
                        .HasForeignKey("Acp_per_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academia");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("api_personal.Entities.AcademiaEntity", b =>
                {
                    b.Navigation("AcademiaPersonals");
                });

            modelBuilder.Entity("api_personal.Entities.PersonalEntity", b =>
                {
                    b.Navigation("AcademiaPersonals");
                });
#pragma warning restore 612, 618
        }
    }
}
